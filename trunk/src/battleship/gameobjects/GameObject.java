package battleship.gameobjects;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import battleship.EventManager;

public abstract class GameObject
{
	public Rectangle r; //the bounds of the object
	protected BufferedImage img;
	protected Graphics g;
	public String name = ""; //name, used to identify
	
	//GameObject EventManager, every GO adds to their EM when an event is created
	protected EventManager goem = new EventManager();
	
	public GameObject(Rectangle r)
	{
		this.r = r;
		
		if(img == null)
		{
			img = new BufferedImage(r.width, r.height, BufferedImage.TRANSLUCENT);
			g = img.getGraphics();
		}
	}
	
	public GameObject(Rectangle r, String s)
	{
		this.r = r;
		name = s;
		
		if(img == null)
		{
			img = new BufferedImage(r.width, r.height, BufferedImage.TRANSLUCENT);
			g = img.getGraphics();
		}
	}
	
	protected void resize(Rectangle r)
	{
		this.r = r;
		img = new BufferedImage(this.r.width, this.r.height, BufferedImage.TRANSLUCENT);
		g = img.getGraphics();
	}
	
	public abstract void update();
	
	//renders graphics to img
	public abstract void render();
	//NOTE: Sometimes it is faster to draw primitives (circles etc)
	//DIRECTLY to the double buffer
	
	//paints to double buffer 
	public abstract void paint(Graphics g);
	
	//catches events
	public abstract void pumpEvents(EventManager em);
	
	//sends events generated by GO to the state, and then to 'em' in FSM
	public abstract EventManager getEvents();
}