package battleship.gameobjects;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import battleship.EventManager;

public abstract class GameObject
{
	public Rectangle mBounds = new Rectangle(); //the bounds of the object
	public String mName = ""; //name, used to identify
	protected EventManager mGameObjEventMgr;
	
	public GameObject()
	{
		
	}
	
	public GameObject(String name, Rectangle rect)
	{
		this.mName = name;
		this.mBounds = rect;
	}
	
	//static method to load images easily
	public static BufferedImage loadImage(String path)
	{
		BufferedImage tempImage = null;
		try
		{
			tempImage = ImageIO.read(new File(path));
		}
		catch (IOException e)
		{
			System.out.println("Unable to load \"" + path + "\"");
			tempImage = new BufferedImage(1, 1, BufferedImage.OPAQUE);
		}
		return tempImage;
	}
	
	
	public abstract void update();
	
	//renders graphics to img
	//NOTE: Sometimes it is faster to draw primitives (circles etc)
	//DIRECTLY to the double buffer
	public abstract void render();
	
	//paints to double buffer
	public abstract void paint(Graphics g);
	
	//catches events
	public abstract void pumpEvents(EventManager em);
	
	//sends events generated by GO to the state, and then to 'em' in FSM
	public abstract EventManager getEvents();
}